//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Contact.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ContactContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ContactContext object using the connection string found in the 'ContactContext' section of the application configuration file.
        /// </summary>
        public ContactContext() : base("name=ContactContext", "ContactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ContactContext object.
        /// </summary>
        public ContactContext(string connectionString) : base(connectionString, "ContactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ContactContext object.
        /// </summary>
        public ContactContext(EntityConnection connection) : base(connection, "ContactContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sample> Samples
        {
            get
            {
                if ((_Samples == null))
                {
                    _Samples = base.CreateObjectSet<Sample>("Samples");
                }
                return _Samples;
            }
        }
        private ObjectSet<Sample> _Samples;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Samples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSamples(Sample sample)
        {
            base.AddObject("Samples", sample);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Sample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sample object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Sample CreateSample(global::System.Int32 id)
        {
            Sample sample = new Sample();
            sample.Id = id;
            return sample;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String String
        {
            get
            {
                return _String;
            }
            set
            {
                OnStringChanging(value);
                ReportPropertyChanging("String");
                _String = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("String");
                OnStringChanged();
            }
        }
        private global::System.String _String;
        partial void OnStringChanging(global::System.String value);
        partial void OnStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Integer
        {
            get
            {
                return _Integer;
            }
            set
            {
                OnIntegerChanging(value);
                ReportPropertyChanging("Integer");
                _Integer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Integer");
                OnIntegerChanged();
            }
        }
        private Nullable<global::System.Int32> _Integer;
        partial void OnIntegerChanging(Nullable<global::System.Int32> value);
        partial void OnIntegerChanged();

        #endregion
    
    }

    #endregion
    
}
